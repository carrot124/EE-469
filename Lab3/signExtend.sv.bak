`timescale 1ns/10ps
module signExtend #(parameter WIDTH = 9) (in, out);
	input logic [WIDTH-1:0] in;
	output logic [63:0] out;
	int i;
	always_comb begin
		for (i = 0, i < WIDTH, i++) {
			out[i] = in[i];
		}
		for (i = WIDTH, i < 64, i++) {
			out[i] = in[WIDTH-1];
		}
		end
endmodule

module signExtend_testbench();
	input logic [8:0] in;
	output logic [63:0] out;
	
	signExtend dut(.in, .out);
	
	initial begin
	in = 8'b10111101; #10;
	in = 8'b00011010; #10;
	end
	
endmodule
	
	
	